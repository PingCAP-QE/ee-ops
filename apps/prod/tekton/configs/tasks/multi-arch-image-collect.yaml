apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: multi-arch-image-collect
spec:
  description: |
    The working flow:
    1. list the tags for the repo.
    2. filter the single arch tags.
    3. get the digest of the tags.
    4. the tags should follow the standard format:
      - master-00595b4-release_linux_amd64 => master-00595b4-release => master-00595b4 => master
      - master-00595b4-release-linux-arm64 => master-00595b4-release => master-00595b4 => master
      - master-00595b4-release_arm64       => master-00595b4-release => master-00595b4 => master
      - master-00595b4-release-arm64       => master-00595b4-release => master-00595b4 => master
  params:
    - name: image_url
      description: |
        The full url of the pushed image, contain the tag part.
        It will parse the repo from it.
    - name: release_tag_suffix
      default: "release"
  results:
    - name: repo
      description: image repo
    - name: tags
      description: tags to push
    - name: digests
      type: array
      description: |
        image digests list for different platforms, element format is
        <platform> => <digest>
  steps:
    - name: prepare-manifest
      image: ghcr.io/pingcap-qe/cd/utils/release:5d33328
      script: |
        #! /usr/bin/env bash

        set -exo pipefail

        :> $(results.digests.path)
        :> $(results.repo.path)
        :> $(results.tags.path)
        :> manifest.yaml

        # steps:
        # 1. check the pushed tag, if not existed, step will fail.
        oras repo tags $(params.image_url)

        # 2. compute the mult-arch tags and digests
        pushed_repo="$(echo $(params.image_url) | cut -d ':' -f 1)"
        pushed_tag="$(echo $(params.image_url) | cut -d ':' -f 2)"
        tag=$(\
          echo "$pushed_tag" | \
          sed -E 's/[-_](amd64|arm64)$//g' | \
          sed -E 's/[-_]linux$//g' \
        )

        # repo
        yq -i ".image = \"$pushed_repo\"" manifest.yaml

        # tags
        tags="$tag"
        tags="$tags $(echo $tag | sed -E 's/[-_]$(params.release_tag_suffix)$//g')"
        # for tags
        for t in $tags; do
          yq -i ".tags += [\"$t\"]" manifest.yaml
        done

        # digest map
        jq -n '[]' > $(results.digests.path)
        for t in `oras repo tags $pushed_repo | grep -E "${tag}[-_].*[-_](amd64|arm64)$"`; do
          manifest-tool inspect --raw "${pushed_repo}:$t" > manifest.json
          platform=`jq -r '.os + "/" + .architecture' manifest.json`
          digest=`jq -r '.digest' manifest.json`
          echo "add for: ${platform} => ${digest}"

          os="$(echo "$platform" | awk -F/ '{print $1}')"
          architecture="${platform#*/}"
          yq -i '.manifests += [{}]' manifest.yaml
          yq -i ".manifests[-1].image = \"${pushed_repo}@${digest}\"" manifest.yaml
          yq -i ".manifests[-1].platform.os = \"$os\"" manifest.yaml
          yq -i ".manifests[-1].platform.architecture = \"$architecture\"" manifest.yaml
        done

        cat manifest.yaml
        printf "%s" "$pushed_repo" > $(results.repo.path)
        printf "%s" "$tags" > $(results.tags.path)
      workingDir: /workspace
    - name: push-manifest
      image: mplatform/manifest-tool:alpine-v2.0.8
      args: [push, from-spec, manifest.yaml]
      workingDir: /workspace
  workspaces:
    - description: Includes a docker `config.json`
      mountPath: /root/.docker
      name: dockerconfig
      optional: true
