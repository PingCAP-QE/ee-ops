apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: pingcap-get-set-release-version-v2
spec:
  results:
    - description: The release version of the git repo
      name: version
      type: string
  workspaces:
    - name: source
  steps:
    - name: cleanup-tags
      image: alpine/git:v2.47.2
      workingDir: $(workspaces.source.path)
      resources:
        requests:
          memory: 512Mi
          cpu: "100m"
      script: |
        #!/bin/sh
        set -e

        echo "Delete the none-standard tags"
        # keep these the tags matched these styles:
        # - v1.2.3-alpha
        # - v1.2.3-beta
        # - v1.2.3-beta.4
        # - v1.2.3-rc
        # - v1.2.3-rc.4
        # - v1.2.3
        # - v1.2.3-(fips|...), but currently we only allow "fips" for the range in `()`.
        if git tag | grep -E "v[0-9]+[.][0-9]+[.][0-9]+(-(alpha|beta|fips)([.][0-9]+)?)?$" > /dev/null; then
          # Only delete the none-standard tags when the repo has standard semver tags.

          git tag | grep -vE "^v[0-9]+[.][0-9]+[.][0-9]+(-(((alpha|beta|rc)([.].+)?)|fips|202[1-9][0-1][0-9][0-3][0-9]-[0-9a-f]{7,10}))?$" | xargs git tag -d || true
        fi
        # Get raw version and save to file for next step
        git describe --tags --always --dirty --exclude 'v20[0-9][0-9].[0-1][0-9].[0-3][0-9]*' > /workspace/raw-version.txt

        # Get the branches which contained the commits
        git branch --contains > /workspace/branches.txt
    - name: compute-version
      image: denoland/deno:2.2.3
      command:
        - deno
        - run
        - --allow-read
        - --allow-write
        - https://github.com/PingCAP-QE/ci/raw/refs/heads/main/scripts/flow/build/versioning-strategy.ts
      args:
        - --git_version_file=/workspace/raw-version.txt
        - --contain_branches_file=/workspace/branches.txt
        - --save_build_git_tag_file=/workspace/new-tag
        - --save_release_version_file=$(results.version.path)
    - name: apply-tags
      image: alpine/git:2.40.1
      workingDir: $(workspaces.source.path)
      script: |
        #!/bin/sh
        set -e

        if [ -f "/workspace/new-tag" ]; then
          NEW_TAG=$(cat /workspace/new-tag)
          echo "Applying new tag: ${NEW_TAG}"
          git tag --contains | xargs git tag -d
          git tag -f "${NEW_TAG}"
        else
          echo "No new tag needs to be applied."
        fi
