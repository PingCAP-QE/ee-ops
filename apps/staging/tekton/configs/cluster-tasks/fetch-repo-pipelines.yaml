apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: fetch-repo-pipelines
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.37.0"
    tekton.dev/categories: kubernetes
    tekton.dev/tags: kubernetes
    tekton.dev/displayName: fetch repo pipelines
    tekton.dev/platforms: "linux/amd64"
spec:
  description: Get self pipeline manifest in repo.
  workspaces:
    - name: output
      description: Save all the pipeline manifest files.
  params:
    - name: git-url
      description: |
        The GitHub repository full url, e.g.: https://github.com/tektoncd/catalog.git
      type: string
    - name: git-revision
      description: |
        Commit SHA to get ci pipeline manifests.
      type: string
      default: main
    - name: pr-number
      type: number
      description: Pull request number.
    - name: context
      type: string
      default: .ci
      description: CI manifest dir.
    - name: output
      type: string
      default: "ci.yaml"
      description: ci manifest parsed output file path.
    - name: github-app-secret
      description: |
        The name of the kubernetes secret that contains the GitHub app id and private key token.
      type: string
      default: github-app
  volumes:
    - name: github-app-secret
      secret:
        secretName: $(params.github-app-secret)
  steps:
    - name: get-ci-manifests
      image: denoland/deno:1.23.3
      workingDir: $(workspaces.output.path)
      script: |
        #! /usr/bin/env bash

        remote_repo_url="$(params.git-url)"
        # only for demo simplify.
        remote_script_url="${remote_repo_url%.git}/raw/$(params.git-revision)/.ci/scripts/get.ts"

        deno run -q --allow-read --allow-write --allow-net \
          "${remote_script_url}" \
          --gitUrl="$(params.git-url)" \
          --sha=$(params.git-revision) \
          --ciDir=$(params.context) \
          --output=$(params.output) \
          --appId="$(cat /etc/github-app-secret/app-id)" \
          --privateKeyPath=/etc/github-app-secret/app-cert-pkcs8

      volumeMounts:
        - name: github-app-secret
          mountPath: /etc/github-app-secret
    - name: compose-tekton-resources
      image: denoland/deno:1.23.3
      workingDir: $(workspaces.output.path)
      script: |
        #! /usr/bin/env bash

        remote_repo_url="$(params.git-url)"
        # only for demo simplify.
        remote_script_url="${remote_repo_url%.git}/raw/$(params.git-revision)/.ci/scripts/compose.ts"

        deno run -q --allow-read --allow-write \
          "${remote_script_url}" \
            --input=$(params.output) \
            --gitUrl=$(params.git-url) \
            --pr.number=$(params.pr-number)
