apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: prow
  namespace: flux-system
spec:
  dependsOn:
    - { name: jenkins, namespace: flux-system }
  releaseName: prow
  targetNamespace: apps
  chart:
    spec:
      chart: prow
      version: 0.8.1
      sourceRef:
        kind: HelmRepository
        name: ee-ops
        namespace: flux-system
  interval: 5m
  timeout: 5m
  install:
    crds: CreateReplace
    remediation:
      retries: 3
  rollback:
    cleanupOnFail: true
    recreate: true
  upgrade:
    crds: CreateReplace
    cleanupOnFail: true
    remediation:
      retries: 3
  test:
    enable: true
    ignoreFailures: false
  valuesFrom:
    - kind: Secret
      name: ${PROW_SECRET_NAME}
      valuesKey: GITHUB_APP_ID
      targetPath: prow.githubAppId
    - kind: Secret
      name: ${PROW_SECRET_NAME}
      valuesKey: GITHUB_APP_CERT
      targetPath: prow.githubAppCert
    - kind: Secret
      name: ${PROW_SECRET_NAME}
      valuesKey: GITHUB_APP_WEBHOOK_HMAC
      targetPath: prow.githubHmacToken
    - kind: Secret
      name: ${PROW_SECRET_NAME}
      valuesKey: GITHUB_TOKEN
      targetPath: prow.githubOauthToken
    - kind: Secret
      name: ${PROW_SECRET_NAME}
      valuesKey: DOMAIN_NAME
      targetPath: prow.domainName
  values:
    prow:
      podsNamespace: ${TEST_PODS_NAMESPACE} # should delete old prow-pcm pods when changed.
      githubOrg: PingCAP-QE
    deck:
      image:
        repository: ticommunityinfra/deck
        tag: v20230323-3ade632
    tide:
      image:
        repository: ticommunityinfra/tide
        tag: v20230323-3ade632
    hook:
      image:
        repository: ticommunityinfra/hook
        tag: latest
    pipeline:
      image:
        repository: ticommunityinfra/pipeline
        tag: latest
    jenkinsOperator:
      enabled: true
      skipReport: true
      dryRun: false
      jenkinsUrl: http://jenkins:8080/jenkins/
      auth:
        secretName: ${JENKINS_OPERATOR_AUTH_SEC_NAME}
        secretKeyJenkinsUser: ${JENKINS_OPERATOR_AUTH_SEC_KEY_USER}
        secretKeyJenkinsToken: ${JENKINS_OPERATOR_AUTH_SEC_KEY_TOKEN}
    thirdPlugins:
      chatgpt:
        service:
          type: ClusterIP
        replicaCount: 1
        image:
          repository: ticommunityinfra/chatgpt
          tag: v20230428-10c1653
        ports:
          http: 8888
        args:
          - --dry-run=false
          - --github-app-id=$(GITHUB_APP_ID)
          - --github-app-private-key-path=/etc/github/cert
          - --github-endpoint=http://prow-ghproxy
          - --github-graphql-endpoint=http://prow-ghproxy/graphql
          - --openai-config-file=/etc/openai/config.yaml
          - --openai-tasks-file=/etc/openai/tasks.yaml
          - --openai-model="gpt-3.5-turbo"
          - --issue-comment-command=review
        env:
          - name: GITHUB_APP_ID
            valueFrom:
              secretKeyRef:
                name: prow-github-token
                key: appid
        volumeMounts:
          - name: openai-config
            mountPath: /etc/openai
            readOnly: true
        volumes:
          - name: openai-config
            projected:
              sources:
                - secret:
                    name: prow-openai
                    optional: true
                    items:
                      - key: config.yaml
                        path: config.yaml
                - configMap:
                    name: prow-openai
                    items:
                      - key: tasks.yaml
                        path: tasks.yaml
      needs-rebase:
        replicaCount: 1
        image:
          repository: gcr.io/k8s-prow/needs-rebase
        ports:
          http: 80
        resources: {}
        args:
          - --dry-run=false
          - --github-app-id=$(GITHUB_APP_ID)
          - --github-app-private-key-path=/etc/github/cert
          - --github-endpoint=http://prow-ghproxy
          - --github-graphql-endpoint=http://prow-ghproxy/graphql
        service:
          type: ClusterIP
    persistent:
      type: s3
      bucketName: ${BUCKET_NAME}
      credentials: |
        {
          "region": "${BUCKET_REGION:=ceph}",
          "endpoint": "${BUCKET_HOST}:${BUCKET_PORT}",
          "insecure": true,
          "s3_force_path_style": true,
          "access_key": "${AWS_ACCESS_KEY_ID}",
          "secret_key": "${AWS_SECRET_ACCESS_KEY}"
        }
  postRenderers:
    - kustomize:
        patchesJson6902:
          # for updating ConfigMaps in after release deployment.
          - target:
              version: v1
              kind: ConfigMap
              name: prow-config
              namespace: apps
            patch:
              # for merging configmap
              # TODO(wuhuizuo): how to merge the inner yaml from value content.
              - op: replace
                path: /metadata/annotations.kustomize.toolkit.fluxcd.io/ssa
                value: merge
          - target:
              version: v1
              kind: ConfigMap
              name: prow-job-config
              namespace: apps
            patch:
              # for merging configmap
              # TODO(wuhuizuo): how to merge the inner yaml from value content.
              - op: replace
                path: /metadata/annotations.kustomize.toolkit.fluxcd.io/ssa
                value: merge
          - target:
              version: v1
              kind: ConfigMap
              name: prow-plugins
              namespace: apps
            patch:
              # for merging configmap
              # TODO(wuhuizuo): how to merge the inner yaml from value content.
              - op: replace
                path: /metadata/annotations.kustomize.toolkit.fluxcd.io/ssa
                value: merge
