apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "prow.fullname.tide" . }}
  labels:
    {{- include "prow.labels.tide" . | nindent 4 }}
spec:
  {{- if not .Values.tide.autoscaling.enabled }}
  replicas: {{ .Values.tide.replicaCount }}  # Do not scale up.
  {{- end }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "prow.selectorLabels.tide" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "prow.selectorLabels.tide" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "prow.serviceAccountName.tide" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.tide.image.repository }}:{{ .Values.tide.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.tide.image.pullPolicy | default .Values.imagePullPolicy }}
          args:
            - --dry-run=false
            - --config-path=/etc/prow-config/config.yaml
            - --job-config-path=/etc/prow-jobs
            - --github-app-id=$(GITHUB_APP_ID)
            - --github-app-private-key-path=/etc/github/app-private-key
            - --github-endpoint=http://{{ include "prow.fullname.ghproxy" . }}
            - --github-graphql-endpoint=http://{{ include "prow.fullname.ghproxy" . }}/graphql
            - --history-uri={{ include "prow.persistent.baseUrl" . }}/tide/tide-history.json"
            - --status-path={{ include "prow.persistent.baseUrl" . }}/status-reconciler/status-reconciler-status
            {{- if include "prow.persistent.needCredentials" . }}
            - "--{{ .Values.persistent.type }}-credentials-file=/etc/persistent-credentials/{{ .Values.persistent.credentials.secretKey }}"
            {{- end }}
            {{- with .Values.tide.additionalArgs }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
            - name: GITHUB_APP_ID
              valueFrom:
                secretKeyRef:
                  name: {{ default (printf "%s-github" (include "prow.fullname" .)) .Values.prow.github.secretName }}
                  key: app-id
          ports:
            - name: http
              containerPort: 8888
          volumeMounts:
            - name: github
              mountPath: /etc/github
              readOnly: true
            - name: prow-config
              mountPath: /etc/prow-config
              readOnly: true
            - name: prow-jobs
              mountPath: /etc/prow-jobs
              readOnly: true
            {{- if include "prow.persistent.needCredentials" . }}
            - name: persistent-credentials
              mountPath: /etc/persistent-credentials
              readOnly: true
            {{- end }}
            {{- if .Values.tide.kubeconfigSecret }}
            - mountPath: /etc/kubeconfig
              name: kubeconfig
              readOnly: true
            {{- end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
          resources:
            {{- toYaml .Values.tide.resources | nindent 12 }}
      volumes:
        - name: github
          secret:
            secretName: {{ default (printf "%s-github" (include "prow.fullname" .)) .Values.prow.github.secretName }}
        - name: prow-config
          configMap:
            name: {{ default (printf "%s-config" (include "prow.fullname" .)) .Values.prow.configs.prow.configMapName }}
        - name: prow-jobs
          configMap:
            name: {{ default (printf "%s-job" (include "prow.fullname" .)) .Values.prow.configs.job.configMapName }}
        {{- if include "prow.persistent.needCredentials" . }}
        - name: persistent-credentials
          secret:
            secretName: {{ default (printf "%s-%s-credentials" (include "prow.fullname" .) .Values.persistent.type) .Values.persistent.credentials.secretName }}
        {{- end }}
        {{- with .Values.tide.kubeconfigSecret }}
        - name: kubeconfig
          secret:
            secretName: {{ . }}
            optional: true
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
