---
# Default values for prow.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

### Global Pod configurations.
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
nodeSelector: {}
tolerations: []
affinity: {}
podAnnotations: {}
podSecurityContext: {}
securityContext: {}

#### custom config, all should be replaced.
prow:
  podsNamespace: default

  domainName: << REPLACE >>
  githubAppId: << REPLACE >>
  githubAppCert: << REPLACE >>
  # Generate via `openssl rand -hex 20`.
  # This is the secret used in the GitHub webhook configuration
  githubHmacToken: << REPLACE >>

  # github org:
  githubOrg: << REPLACE >>

  # global prow config. it call override the default content with merging strategy.
  config: ""

  # prow plugins config. it call override the default content with merging strategy.
  plugins: ""

  # jobs, key, value with file key and content.
  # job key should have no file extension, job content example: job-example.yaml.
  # install with `helm install prow charts/prow --set-file prow.jobs.example=job-example.yaml`
  jobs:
    example: |
      periodics:
        - interval: 10m
          agent: kubernetes
          name: echo-test
          spec:
            containers:
              - image: alpine
                command: ["/bin/date"]

### Values for minIO Sub chart.
minio:
  regionName: prow
  auth:
    rootUser: root
    rootPassword: password
  defaultBuckets: "prow-logs,tide,status-reconciler"
  persistence:
    size: 10Gi
  extraEnvVars:
    - name: MINIO_REGION_NAME
      value: prow

########################################
# Configuration for prow components    #
########################################
crier:
  image:
    repository: gcr.io/k8s-prow/crier
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template.
    name: ""
    roleBinding:
      create: true
      name: ""
  resources: {}

deck:
  image:
    repository: gcr.io/k8s-prow/deck
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 2
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  service:
    type: ClusterIP
    port: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template
    name: ""
    roleBinding:
      create: true
      name: ""

  resources: {}
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-staging
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - paths:
          - path: /
            pathType: Prefix
        # host: << REPLACE >>
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - << REPLACE >>

ghproxy:
  image:
    repository: gcr.io/k8s-prow/ghproxy
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  service:
    type: ClusterIP
    port: 80
  resources: {}
  persistence:
    size: 10Gi

hook:
  image:
    repository: gcr.io/k8s-prow/hook
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 2
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  service:
    type: ClusterIP
    port: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template
    name: ""
    roleBinding:
      create: true
      name: ""
  resources: {}
  ingress:
    enabled: true
    className: ""
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-staging
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts:
      - paths:
          - path: /hook
            pathType: Prefix
        # host: << REPLACE >>

    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - << REPLACE >>

horologium:
  image:
    repository: gcr.io/k8s-prow/horologium
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  # Do not scale up.
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template
    name: ""
    roleBinding:
      create: true
      name: ""
  resources: {}

pcm:
  image:
    repository: gcr.io/k8s-prow/prow-controller-manager
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template
    name: ""
    roleBinding:
      create: true
      name: ""
  resources: {}

sinker:
  image:
    repository: gcr.io/k8s-prow/sinker
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template
    name: ""
    roleBinding:
      create: true
      name: ""
  resources: {}

statusReconciler:
  image:
    repository: gcr.io/k8s-prow/status-reconciler
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template
    name: ""
    roleBinding:
      create: true
      name: ""
  resources: {}

tide:
  image:
    repository: gcr.io/k8s-prow/tide
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  # Do not scale up.
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  service:
    type: ClusterIP
    port: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template
    name: ""
    roleBinding:
      create: true
      name: ""
  resources: {}

pipeline:
  image:
    repository: gcr.io/k8s-prow/pipeline
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true,
    # a name is generated using the `fullname` template
    name: ""
    roleBinding:
      create: true
      name: ""
  resources: {}
  # kubeconfigSecret: external kubeconfig secret contain keys: "config"
  kubeconfigSecret: ""

jenkinsOperator:
  image:
    repository: gcr.io/k8s-prow/jenkins-operator
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  resources: {}

  # Whether or not to make mutating API calls to GitHub/Kubernetes/Jenkins.
  dryRun: true
  # Whether or not to ignore report with githubClient
  skipReport: false

  # Jenkins URL
  jenkinsUrl: http://jenkins-proxy
  # If CSRF protection is enabled in Jenkins, --csrf-protect=true needs to be used on the operator's side to allow Prow to work correctly.
  csrfProtect: false

  auth:
    # store auth secret contents.
    secretName: ""

    # Basic auth and bearer token are mutually exclusive options whereas cert-based auth is complementary to both of them.
    #
    # basic auth, using --jenkins-user and --jenkins-token-file.
    #
    secretKeyJenkinsUser: jenkins-admin-user
    secretKeyJenkinsToken: jenkins-admin-password

    # OpenShift bearer token auth, using --jenkins-bearer-token-file.
    #
    secretKeyJenkinsBearerToken: ""

    # certificate-based auth, using --cert-file, --key-file, and optionally --ca-cert-file.
    #
    secretKeyCert: ""
    secretKeyKey: ""
    secretKeyCaCert: ""

  # TODO(wuhuizuo): implement sharding deployment
  # sharding:
  #   # will add run args to each jenkins-operator intance container with `--label-selector=<key=value>`
  #   labelSelectors:
  #     - master=jenkins-master1
  #     - master=jenkins-master2
